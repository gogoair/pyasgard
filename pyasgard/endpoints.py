"""Asgard API mapping."""
INSTANCE_TYPE = 't2.micro'

MAPPING_TABLE = {
    'list_regions': {
        'path': '/region/list.json',
        'method': 'GET',
        'status': 200,
    },
    'list_instances': {
        'path': '/instance/list.json',
        'method': 'GET',
        'status': 200,
    },
    'list_applications': {
        'path': '/application/list.json',
        'method': 'GET',
        'status': 200,
    },
    'show_application': {
        'path': '/application/show/${app_name}.json',
        'method': 'GET',
        'status': 200,
    },
    'create_application': {
        'path': '/application/save',
        'method': 'POST',
        'status': 200,
        'valid_params': ['name', 'group', 'description', 'owner', 'email'],
        'default_params': {
            'name': 'unneccessary',
            'group': 'Replaceable',
            'type': 'Web Service',
            'description': 'Poor description.',
            'owner': 'Bashful',
            'email': 'invalid@gogoair.com',
            'monitorBucketType': 'none'
        },
    },
    'delete_application': {
        'path': '/application/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'name': 'unnecessary',
            '_action_delete': '',
        },
    },
    'list_application_instances': {
        'path': '/instance/list/${app_id}.json',
        'method': 'GET',
        'status': 200,
    },
    'show_instance': {
        'path': '/instance/show/${instance_id}.json',
        'method': 'GET',
        'status': 200,
    },
    'list_auto_scaling_groups': {
        'path': '/autoScaling/list.json',
        'method': 'GET',
        'status': 200,
    },
    'show_auto_scaling_group': {
        'path': '/autoScaling/show/${asg_id}.json',
        'method': 'GET',
        'status': 200,
    },
    'delete_auto_scaling_group': {
        'path': '/autoScaling/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'name': '',
            '_action_delete': '',
        },
    },
    'create_auto_scaling_group': {
        'path': '/autoScaling/save',
        'method': 'POST',
        'status': 200,
        'valid_params': 'vpc_id',
        'default_params': {
            'appName': '',
            'stack': '',
            'newStack': '',
            'detail': '',
            'countries': '',
            'devPhase': '',
            'hardware': '',
            'partners': '',
            'revision': 0,
            'min': 1,
            'max': 1,
            'desiredCapacity': 0,
            'defaultCooldown': 10,
            'healthCheckType': 'EC2',  # XOR ELB
            'healthCheckGracePeriod': 600,
            'terminationPolicy': 'Default',
            'subnetPurpose': 'app',
            'selectedZones': ['us-east-1b'],
            'azRebalance': 'enabled',
            'selectedLoadBalancersForVpcId${vpc_id}': [''],
            'imageId': '',
            'instanceType': INSTANCE_TYPE,
            'keyName': 'jenkins_access',
            'pricing': 'SPOT',
            'kernelId': '',
            'ramdiskId': '',
            'iamInstanceProfile': '',
            'selectedSecurityGroups': ['default'],
        },
    },
    'list_clusters': {
        'path': '/cluster/list.json',
        'method': 'GET',
        'status': 200,
    },
    'enable_cluster': {
        'path': '/cluster/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'ticket': '',
            'name': '',
            'minAndMaxSize': 1,
            '_action_activate': '',
        },
    },
    'disable_cluster': {
        'path': '/cluster/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'ticket': '',
            'name': '',
            'minAndMaxSize': 1,
            '_action_deactivate': '',
        },
    },
    'shrink_cluster': {
        'path': '/cluster/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'name': '',
            'ticket': '',
            'minAndMaxSize': 1,
            '_action_delete': '',
        },
    },
    'grow_cluster': {
        'path': '/cluster/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'ticket': '',
            'name': '',
            'noOptionalDefaults': 'true',
            'min': 1,
            'max': 1,
            'desiredCapacity': 0,
            'defaultCooldown': 10,
            'healthCheckType': 'EC2',  # XOR ELB
            'healthCheckGracePeriod': 600,
            'terminationPolicy': 'Default',
            'subnetPurpose': 'app',
            'selectedZones': ['us-east-1b'],
            'azRebalance': 'enabled',
            'selectedLoadBalancersForVpcId${vpc_id}': [''],
            'imageId': '',
            'instanceType': INSTANCE_TYPE,
            'keyName': 'jenkins_access',
            'selectedSecurityGroups': ['default'],
            'pricing': 'ON_DEMAND',  # ON_DEMAND=reliable, SPOT=cheaper
            'kernelId': '',
            'ramdiskId': '',
            'iamInstanceProfile': '',
            'afterBootWait': 30,
            'trafficAllowed': 'on',
            '_action_createNextGroup': '',
        },
    },
    'cluster_resize': {
        'path': '/cluster/resize',
        'method': 'POST',
        'status': 200,
    },
    'show_cluster': {
        'path': '/cluster/show/${cluster_id}.json',
        'method': 'GET',
        'status': 200,
    },
    'show_ami': {
        'path': '/image/show/${ami_id}.json',
        'method': 'GET',
        'status': 200,
    },
    'list_ami': {
        'path': '/image/list.json',
        'method': 'GET',
        'status': 200,
    },
    'push_ami': {
        'path': '/push/startRolling',
        'method': 'POST',
        'status': 200,
        'default_params': {'name': '',
                           'appName': '',
                           'imageId': '',
                           'instanceType': INSTANCE_TYPE,
                           'keyName': 'jenkins_access',
                           'selectedSecurityGroups': ['default'],
                           'relaunchCount': 1,
                           'kernelId': '',
                           'ramdiskId': '',
                           'concurrentRelaunches': 1,
                           'newestFirst': 'false',
                           'checkHealth': 'on',
                           'afterBootWait': 30, },
    },
    'list_launchconfigs': {
        'path': '/launchConfiguration/list.json',
        'method': 'GET',
        'status': 200,
    },
    'show_launchconfig': {
        'path': '/launchConfiguration/show/${config_name}.json',
        'method': 'GET',
        'status': 200,
    },
    'list_elb': {
        'path': '/loadBalancer/list.json',
        'method': 'GET',
        'status': 200,
    },
    'delete_elb': {
        'path': '/loadBalancer/save',
        'method': 'POST',
        'status': 200,
        'default_params': {'ticket': '',
                           'name': '',
                           '_action_delete': '', },
    },
    'create_elb': {
        'path': '/loadBalancer/save',
        'method': 'POST',
        'status': 200,
        'default_params': {
            'ticket': '',
            'appName': '',
            'stack': '',
            'newStack': '',
            'detail': '',
            'subnetPurpose': 'elb',
            'selectedZones': ['us-east-1b'],
            'selectedSecurityGroups': ['default'],
            'protocol1': 'HTTP',  # XOR TCP
            'lbPort1': 80,
            'instancePort1': 7001,
            'protocol2': '',
            'lbPort2': '',
            'instancePort2': '',
            'target': 'HTTP:7001/healthcheck',
            'interval': 10,
            'timeout': 5,
            'unhealthy': 2,
            'healthy': 10,
            '_action_save': '',
        },
    },
    'server_uptime': {
        'path': '/server/uptime',
        'method': 'GET',
        'status': 200,
    },
    'server_ip': {
        'path': '/server/ip',
        'method': 'GET',
        'status': 200,
    },
    'server_build': {
        'path': '/server/build',
        'method': 'GET',
        'status': 200,
    },
    'delete_launchconfig': {
        'path': '/launchConfiguration/index',
        'method': 'POST',
        'status': 200,
        'default_params': {'name': 'replaceme',
                           '_action_delete': ''},
    },
    'mass_delete_launchconfigs': {
        'path': '/launchConfiguration/index',
        'method': 'POST',
        'status': 200,
        'default_params': {'daysAgo': 10,
                           '_action_massDelete': ''},
    }
}
